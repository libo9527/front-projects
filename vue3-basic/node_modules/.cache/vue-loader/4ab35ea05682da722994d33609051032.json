{"remainingRequest":"/Users/libo/Desktop/front/front-projects/vue3-basic/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/libo/Desktop/front/front-projects/vue3-basic/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css","dependencies":[{"path":"/Users/libo/Desktop/front/front-projects/vue3-basic/src/App.vue","mtime":1608723820685},{"path":"/Users/libo/Desktop/front/front-projects/vue3-basic/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libo/Desktop/front/front-projects/vue3-basic/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/libo/Desktop/front/front-projects/vue3-basic/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/libo/Desktop/front/front-projects/vue3-basic/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/libo/Desktop/front/front-projects/vue3-basic/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiNhcHAgewogIGZvbnQtZmFtaWx5OiBBdmVuaXIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgY29sb3I6ICMyYzNlNTA7CiAgbWFyZ2luLXRvcDogNjBweDsKfQo="},{"version":3,"sources":["/Users/libo/Desktop/front/front-projects/vue3-basic/src/App.vue"],"names":[],"mappings":";AA0GA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB","file":"/Users/libo/Desktop/front/front-projects/vue3-basic/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div id=\"app\">\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n    <!-- <HelloWorld msg=\"Welcome to Your Vue.js + TypeScript App\"/> -->\n    <Suspense> \n      <template #default>\n        <async-show />\n        <dog-show />\n      </template>\n      <template #fallback>\n        <h1>Loading ! ...</h1>\n      </template>\n    </Suspense>\n    <h1>{{ count }}</h1>\n    <h1>{{ double }}</h1>\n    <ul>\n      <li v-for=\"number in numbers\" :key=\"number\"><h1>{{ number }}</h1></li>\n    </ul>\n    <h1>{{ person.name }}</h1>\n    <button @click=\"openModal\">Open Modal</button>\n    <h1 v-if=\"loading\">Loading!</h1>\n    <!-- <img v-if=\"loaded\" :src=\"result.message\"> -->\n    <img v-if=\"loaded\" :src=\"result[0].url\">\n    <button @click=\"increase\">+1</button>\n    <modal :isOpen=\"modalIsOpen\" @close-modal=\"onCloseModal\">My Modal</modal>\n  </div>\n  \n</template>\n\n<script lang=\"ts\">\nimport { computed, reactive, ref, toRefs, watch } from 'vue'\nimport useUrlLoader from './hooks/useUrlLoader'\nimport Modal from './components/Modal.vue'\nimport AsyncShow from './components/AsyncShow.vue'\nimport DogShow from './components/DogShow.vue'\n\ninterface DataProps {\n  count: number;\n  double: number;\n  increase: () => void;\n  numbers: number[];\n  person: { name?: string };\n}\ninterface DogResult{\n  message: string;\n  status: string;\n}\ninterface CatResult{\n  id: string;\n  url: string;\n  width: number;\n  height: number;\n}\nexport default {\n  components: { Modal, AsyncShow, DogShow },\n  name: 'App',\n  setup () {\n    // const count = ref(0)\n    // const double = computed(() => {\n    //   return count.value*2\n    // }) \n    // const increase = () => {\n    //   return count.value++\n    // }\n    const data: DataProps = reactive({\n      count: 0,\n      increase: () => { data.count++ },\n      double: computed(() => data.count * 2 ),\n      numbers: [0, 1, 2],\n      person: {}\n    })\n    data.numbers[0] = 5,\n    data.person.name = 'aaa'\n    const refData = toRefs(data)\n    // const { result, loading, loaded, error } = useUrlLoader('https://dog.ceo/api/breeds/image/random')\n    const { result, loading, loaded, error } = useUrlLoader<CatResult[]>('https://api.thecatapi.com/v1/images/search?limit=1')\n    watch(result, () => {\n      if(result.value){\n        console.log('value', result.value[0].url)\n      }\n    })\n    const modalIsOpen = ref(false)\n    const openModal = () => {\n      modalIsOpen.value = true\n    }\n    const onCloseModal = () => {\n      modalIsOpen.value = false\n    }\n    return {\n        // count,\n        // increase,\n        // double\n        ...refData,\n        result,\n        loading,\n        loaded,\n        error,\n        modalIsOpen,\n        openModal,\n        onCloseModal\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]}]}